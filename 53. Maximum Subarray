/*
Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
*/

class Solution {
    public int maxSubArray(int[] nums) {
        int currentValue = nums[0];
        int maxValue = nums[0];
        for(int i=1; i<nums.length; i++){    
            int num = nums[i];
            // If current num is negative or smaller then discard it
            currentValue = Math.max(num, currentValue+num);
            // Compare and the higher value between current and last max calculated
            maxValue = Math.max(currentValue, maxValue);
        }
        return maxValue;
    }
}