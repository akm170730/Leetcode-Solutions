/*
Given the root of a Binary Search Tree (BST), return the minimum difference between the values of any two different nodes in the tree.

Example 1:

Input: root = [4,2,6,1,3]
Output: 1
*/

class Solution {
    
    int result=Integer.MAX_VALUE;
    TreeNode prev;
    
    public int minDiffInBST(TreeNode root) {
        
        // Since its a BST, it will be balanced
        // Also, the root node will be greater than left child and less than right child
        // So INORDER traversal will always give node values in increment
        // Anytime any minimal difference will be captured by two adjacent nodes only
        
        if(root.left!=null) minDiffInBST(root.left);
        if(prev != null) result = Math.min(result, root.val-prev.val);
        prev = root;
        if(root.right!=null) minDiffInBST(root.right);
        return result;
        
    }
}