/*
Given an array of strings strs, group the anagrams together. You can return the answer in any order.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

Example 1:

Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
*/

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        Map<String, List<String>> result = new HashMap<>();
        int[] arr = new int[26];
        
        for(String str : strs){
            // Replace all the elements with zero for every new word from input array
            Arrays.fill(arr, 0);
            
            for(char c: str.toCharArray())
                arr[c - 'a']++;
            
            // Create a common signature for every word to store as key in result map
            StringBuilder sb = new StringBuilder("");
            for(int i=0; i<arr.length; i++){
                sb.append("#");
                sb.append(arr[i]);
            }
            
            String key = sb.toString();
            // Check if this signature key exists in result map
            if(!result.containsKey(key)) result.put(key, new ArrayList<>());
            result.get(key).add(str);
        }
        
        return new ArrayList<>(result.values());
        
    }
}