/*
Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:

Each row must contain the digits 1-9 without repetition.
Each column must contain the digits 1-9 without repetition.
Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.
Note:

A Sudoku board (partially filled) could be valid but is not necessarily solvable.
Only the filled cells need to be validated according to the mentioned rules.
*/

class Solution {
    public boolean isValidSudoku(char[][] board) {
        Set saw = new HashSet();
        for(int i=0; i<9; i++){
            for(int j=0; j<9; j++)
                if(board[i][j] != '.'){
                    // We will create a signature for every non empty char we encounter
                    // With respect to its row, column and block to keep track of repetition
                    char num = board[i][j];
                    if(!saw.add(num + "at row" + i) ||                  // To check repetition in rows
                        !saw.add(num + "at column" + j) ||              // To check repetition in columns
                        !saw.add(num + "in block" + i/3 + "-" + j/3))   // To check repetition in blocks
                        return false;
                }
        }
        return true;
    }
}