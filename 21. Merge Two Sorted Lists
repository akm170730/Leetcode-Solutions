/*
Merge two sorted linked lists and return it as a sorted list.
The list should be made by splicing together the nodes of the first two lists.
Example 1:

Input: l1 = [1,2,4], l2 = [1,3,4]
Output: [1,1,2,3,4,4]
*/

class Solution {
        
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        
        // If one of the list is empty, return another one
        if(l1==null) return l2;
        if(l2==null) return l1;
        
        // Compare the value of both lists for current node
        // If list1 node value is less, then add it to result and increment to next
        if(l1.val<l2.val){
            l1.next = mergeTwoLists(l1.next, l2);
            return l1;
        }
        // Else do the same for list2 if the current node value is less than list1 node value
        else{
            l2.next = mergeTwoLists(l1, l2.next);
            return l2;
        }
    }
}