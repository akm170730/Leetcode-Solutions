/*
You are given a string s that consists of lower case English letters and brackets. 
Reverse the strings in each pair of matching parentheses, starting from the innermost one.
Your result should not contain any brackets.

Example:

Input: s = "(ed(et(oc))el)"
Output: "leetcode"
Explanation: First, we reverse the substring "oc", then "etco", and finally, the whole string.
*/

class Solution {
    public String reverseParentheses(String s) {
        
        Stack<Character> stack = new Stack<>();
        Queue<Character> queue = new LinkedList<>();
        
        for(char c: s.toCharArray()){
            if(!stack.empty() && c == ')'){                
                while(stack.peek()!='(')
                    queue.add(stack.pop());
                
                stack.pop();
                while(!queue.isEmpty())
                    stack.push(queue.remove());
            }
            else
                stack.push(c);
        }
        
        StringBuilder sb = new StringBuilder();
        for(char a: stack) sb.append(a);
        
        return sb.toString();
        
    }
}